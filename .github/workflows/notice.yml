name: Notify Version Changes

on:
  workflow_dispatch: 

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch previous version.json
        id: prev
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -s -H "Authorization: token $GH_TOKEN" \
            https://api.github.com/repos/${{ github.repository }}/contents/version.json?ref=HEAD^ \
            | jq -r '.content' | base64 -d > prev.json

      - name: Fetch current version.json
        run: |
          curl -s -H "Authorization: token $GH_TOKEN" \
            https://api.github.com/repos/${{ github.repository }}/contents/version.json \
            | jq -r '.content' | base64 -d > curr.json

      - name: Generate diff
        id: diff
        env:
          ROLE_ID: ${{ secrets.DISCORD_ROLE_ID }} # ping a role
        run: |
          # Validate JSON
          jq empty prev.json || { echo "prev.json invalid"; exit 1; }
          jq empty curr.json || { echo "curr.json invalid"; exit 1; }

          # Generate diff using jq
          MSG=$(jq -r --argfile prev prev.json '
            to_entries
            | map(select(.value != "" and .value != ($prev[.key] // "")))
            | map("\(.key) [\($prev[.key] // "empty")] -> [\(.value)]")
            | join("\n")
          ' curr.json)

          if [ -z "$MSG" ]; then
            echo "No meaningful changes detected"
            echo "CHANGED=false" >> $GITHUB_OUTPUT
          else
            # Optionally ping a role
            if [ -n "$ROLE_ID" ]; then
              MSG="<@&${ROLE_ID}> **Shikikan, new cdn version(s) just dropped:**\n$MSG"
            else
              MSG="**Shikikan, new cdn version(s) just dropped:**\n$MSG"
            fi
            echo -e "$MSG" > diff.txt
            echo "CHANGED=true" >> $GITHUB_OUTPUT

      - name: Send Discord notification
        if: steps.diff.outputs.CHANGED == 'true'
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          CONTENT=$(cat diff.txt)
          curl -H "Content-Type: application/json" \
               -X POST \
               -d "{\"content\": \"$CONTENT\"}" \
               $DISCORD_WEBHOOK
